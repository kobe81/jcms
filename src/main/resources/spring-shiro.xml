<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

         <!-- 启用shrio授权注解拦截方式 -->  
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        	<!-- 装配 securityManager -->  
        <property name="securityManager" ref="securityManager"/> 
        <!-- 配置登陆页面 -->  
        <property name="loginUrl" value="/system/login.jsp"/>
        <!-- 登陆成功后的一面 -->  
        <property name="successUrl" value="/system/main.jsp"/>
        <!-- 用户访问未对其授权的资源时，所显示的连接 -->
        <property name="unauthorizedUrl" value="/jsp/unauthorized.jsp"/>
        <!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截.  --> 
        <property name="filterChainDefinitions">  
        <value>  
        <!-- anon设置匿名访问 -->
              /index.jsp=anon  
              /system/login.jsp=anon
              /system/logout = logout
              /views/*=anon
              /common/*=anon  
              <!-- /** = authc 所有url都必须认证通过才可以访问 -->
              /system/* = authc
              
        </value>  
        </property>  
         </bean>
         
         <!-- 配置缓存管理器 -->  
        <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
        <!-- 指定 ehcache 的配置文件 -->   
             <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>   
        </bean>
        
        <!-- 配置进行授权和认证的 Realm -->  
        <bean id="shiroRealm" class="com.jcms.system.ShiroRealm"/>
        
        
        <!-- 配置 Shiro 的 SecurityManager Bean. -->  
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
            <property name="cacheManager" ref="cacheManager"/>   
             <property name="realm" ref="shiroRealm"/>   
             <!--<property name="sessionManager" ref="sessionManager">
             </property>  -->
       </bean>
    <!-- 自定义会话管理配置 -->
    <!--<bean id="sessionManager" class="com.yonyou.hotusm.common.security.session.SessionManager">
        <property name="sessionDAO" ref="sessionDAO"/>

        &lt;!&ndash; 会话超时时间，单位：毫秒  &ndash;&gt;
        <property name="globalSessionTimeout" value="3000"/>

        &lt;!&ndash; 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   &ndash;&gt;
        <property name="sessionValidationInterval" value="3000"/>
        &lt;!&ndash;          <property name="sessionValidationSchedulerEnabled" value="false"/> &ndash;&gt;
        <property name="sessionValidationSchedulerEnabled" value="true"/>

        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="sessionIdCookieEnabled" value="true"/>
    </bean>-->

       <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->  
        <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
</beans>